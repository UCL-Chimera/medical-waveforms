name: Run tests

on: [push]
# on: [pull_request]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          # python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv (if it exists)
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies (if no cache exists)
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      # TODO: caching

      # - name: Cache Poetry virtualenv
      #   uses: actions/cache@v1
      #   id: cache
      #   with:
      #     path: ~/.virtualenvs
      #     key: poetry-${{ hashFiles('**/poetry.lock') }}
      #     restore-keys: |
      #       poetry-${{ hashFiles('**/poetry.lock') }}

      # - name: Set Poetry config
      #   run: |
      #     poetry config settings.virtualenvs.in-project false
      #     poetry config settings.virtualenvs.path ~/.virtualenvs

      # - name: Install dependencies
        # run: poetry install
        # if: steps.cache.outputs.cache-hit != 'true'

      - name: Run tests
        run: poetry run pytest --cov-report term-missing --cov .
